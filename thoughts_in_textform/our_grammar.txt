<<<<<<< HEAD
# Grammar 1: pipelines and commands only

<pipeline> 				::= <cmd> | <cmd> T_PIPE <pipeline>
<cmd> 					::= T_WORD | T_WORD <cmd>

# Grammar 2: pipelines, commands and redirects

<cmd>					::= T_WORD
						| <redir> <cmd>
						| <cmd> <redir>
						| <cmd> T_WORD
<redir>					::= T_RE_FROM T_WORD
						| T_RE_TO T_WORD
						| T_RE_FROM_HEREDOC T_WORD
						| T_RE_TO_APPEND T_WORD
 
# Grammar 3: ?!?

<pipeline>	::= <cmd> {T_PIPE <cmd>} // cmd optionally followed by a pipe and another cmd
<cmd>		::= T_WORD {T_WORD} // word optionally followed by another word


EXAMPLE:
ls -l | cat -e


# Shift-reduce parser


# Match predict parser (luca's approach)
							                  |
Token list = START -> TWORD -> TWORD -> TPIPE -> TWORD -> TWORD

parse_command()
{
	if(predict(T_WORD))
	{
		match(T_WORD);
		parse_command;
	}
}

parse_pipeline()
{
	parse_command();
	if (predict(T_WORD))
	{
		match(T_PIPE);
		parse_pipeline()
	}
	else
	{
		match(T_WORD);
	}
}

<pipeline> 				::= <cmd> T_PIPE <cmd>
						| <pipeline> T_PIPE <cmd>

ls 		-l 		< 			infile | 		cat 	-e  	-g 		| 		echo  	"hi" 	"hello"	>		outfile
T_WORD	T_WORD 	T_RE_FROM	T_WORD T_PIPE 	T_WORD 	T_WORD T_WORD 	T_PIPE 	T_WORD 	T_WORD 	T_WORD	T_RE_TO	T_WORD
																	|
1:	stack matches no rule in grammar, Shift.
T_WORD

2:	stack matches rule <cmd> in grammar, reduce.
cmd

3:	stack matches no rule in grammar, Shift
cmd	T_WORD

4:	stack matches rule <cmd> in grammar, reduce.
cmd

5:	stack matches no rule in grammar, Shift
cmd	T_RE_FROM

6:	stack matches no rule in grammar, Shift
cmd	T_RE_FROM	T_WORD

7:	stack matches rule <redir> in grammar, reduce.
cmd redir

8: stack matches rule <cmd> in grammar, reduce.
cmd

9:	stack matches no rule in grammar, shift
cmd	T_PIPE

10:	stack matches no rule in grammar, shift
cmd	T_PIPE	T_WORD

11: stack matches rule <cmd> in grammar, reduce.
cmd	T_PIPE	cmd

12: stack matches rule <pipeline> in grammar, reduce.
pipeline

13: stack matches no rule in grammar, shift
pipeline T_WORD

14: stack matches rule <cmd> in grammar, reduce.
pipeline cmd

15: stack matches no rule in grammar, shift
pipeline cmd T_WORD

16: stack matches rule <cmd> in grammar, reduce.
pipeline cmd

6. SYNTAX ERROR
< ls -l -m
